@using System.Configuration
@using WriteCongress.Core
@using WriteCongress.Web.Models
@model WriteCongress.Web.Models.IssueLetterViewModel
@section head{<link href='//fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>}
@{ViewBag.Title = String.Format("Letter {0} {1} ({2})", Model.Letter.Against ? "opposing" : "supporting", Model.Issue.Name, Model.Letter.Name);}
<input type="hidden" id="letterslug" value="@Model.Letter.Slug" />
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span8">
            <ul class="breadcrumb">
                <li><a href="/">Home</a> <span class="divider">/</span></li>
                <li><a href="/Issues">Issues</a> <span class="divider">/</span></li>
                <li class="active"><a href="/Issues/@Model.Issue.Slug">@Model.Issue.Name</a></li>
            </ul>
            <h1>@Model.Letter.Name</h1>
            <p class="letter-description">@Model.Letter.Description</p>

            <div id="letter" class="letter">
                <div id="letterHeader" class="letter-header well">
                    <h5>@DateTime.Now.ToString("MMMM d, yyyy")</h5>
                    <div><span data-bind="{text:User().FirstName}"></span> <span data-bind="{text:User().LastName}"></span></div>
                    <div>
                        <div data-bind="{text:User().AddressOne}"></div>
                        <div data-bind="{text:User().AddressTwo}"></div>
                        <span data-bind="{text:User().City}"></span> <span data-bind="{text:User().State}"></span> <span data-bind="{text:User().Zip}"></span>
                        <br />
                    </div>
                </div>
                <div class="well">
                    <div class="letter-recipients">
                        <p>The Honorable <span id="addressse" class="label" title="We'll replace on each letter this with the name of the Senator/Rep this letter is sent to.">[NAME OF REP OR SENATOR] <i class="icon-info-sign"></i></span></p>
                        <div class="letter-subject">RE: @Model.Issue.Name</div>
                    </div>
                    <div class="letter-body">
                        @Html.Raw(Model.Letter.Body)
                    </div>
                    <div class="letter-signature">
                        <h4>Sincerely</h4>
                        <span id="letter-signature">
                            <span data-bind="{text:User().FirstName}"></span> <span data-bind="{text:User().LastName}"></span>
                        </span>
                        <h5 data-bind="{text:User().Email}"></h5>
                        <h5 data-bind="{text:User().PhoneNumber}"></h5>
                    </div>
                </div>
            </div>
        </div>
        <div class="span4">
            <div id="senderInfo" class="well letterinfo">
                <h4>Send this letter</h4>
                <hr />
                <h5>Constituent Info @if (!User.Identity.IsAuthenticated)
                                     {<a href="javascript:void(0);" class="login-label login-launcher"><span class="label label-info"><i class="icon-signin"></i>Sign In</span></a>}</h5>
                <input class="span4 livepreview ZipCode" type="text" id="zipcode" maxlength="5" placeholder="Zip Code" data-bind="{value:User().Zip}" /><br />
                <input class="span6 livepreview" type="text" id="firstname" maxlength="11" placeholder="First Name" data-bind="{value:User().FirstName, valueUpdate: 'afterkeydown',enable:User().ValidZip}" />
                <input class="span6 livepreview" type="text" id="lastname" maxlength="20" placeholder="Last Name" data-bind="{value:User().LastName, valueUpdate: 'afterkeydown',enable:User().ValidZip}" /><br />
                <input class="span12 address" type="text" id="address1" maxlength="60" placeholder="Address 1" data-bind="{value:User().AddressOne,enable:User().ValidZip}" /><br />
                <input class="span12 address" type="text" id="address2" maxlength="60" placeholder="Address 2" data-bind="{value:User().AddressTwo,enable:User().ValidZip}" /><br />
                <input class="span6 address zipautofill-city" type="text" id="city" maxlength="20" placeholder="City" data-bind="{value:User().City,enable:User().ValidZip}" />
                <select data-bind="{value:User().State,enable:User().ValidZip}" class="span6 zipautofill-state address" id="state" name="state" placeholder="State" size="1">
                    <option value="">State</option>
                    <option value="AL">Alabama</option>
                    <option value="AK">Alaska</option>
                    <option value="AZ">Arizona</option>
                    <option value="AR">Arkansas</option>
                    <option value="CA">California</option>
                    <option value="CO">Colorado</option>
                    <option value="CT">Connecticut</option>
                    <option value="DE">Delaware</option>
                    <option value="DC">District of Columbia</option>
                    <option value="FL">Florida</option>
                    <option value="GA">Georgia</option>
                    <option value="HI">Hawaii</option>
                    <option value="ID">Idaho</option>
                    <option value="IL">Illinois</option>
                    <option value="IN">Indiana</option>
                    <option value="IA">Iowa</option>
                    <option value="KS">Kansas</option>
                    <option value="KY">Kentucky</option>
                    <option value="LA">Louisiana</option>
                    <option value="ME">Maine</option>
                    <option value="MD">Maryland</option>
                    <option value="MA">Massachusetts</option>
                    <option value="MI">Michigan</option>
                    <option value="MN">Minnesota</option>
                    <option value="MS">Mississippi</option>
                    <option value="MO">Missouri</option>
                    <option value="MT">Montana</option>
                    <option value="NE">Nebraska</option>
                    <option value="NV">Nevada</option>
                    <option value="NH">New Hampshire</option>
                    <option value="NJ">New Jersey</option>
                    <option value="NM">New Mexico</option>
                    <option value="NY">New York</option>
                    <option value="NC">North Carolina</option>
                    <option value="ND">North Dakota</option>
                    <option value="OH">Ohio</option>
                    <option value="OK">Oklahoma</option>
                    <option value="OR">Oregon</option>
                    <option value="PA">Pennsylvania</option>
                    <option value="RI">Rhode Island</option>
                    <option value="SC">South Carolina</option>
                    <option value="SD">South Dakota</option>
                    <option value="TN">Tennessee</option>
                    <option value="TX">Texas</option>
                    <option value="UT">Utah</option>
                    <option value="VT">Vermont</option>
                    <option value="VA">Virginia</option>
                    <option value="WA">Washington</option>
                    <option value="WV">West Virginia</option>
                    <option value="WI">Wisconsin</option>
                    <option value="WY">Wyoming</option>
                </select>
                <input class="span12" type="text" id="email" maxlength="55" placeholder="Email" data-bind="{value:User().Email,enable:User().ValidZip}" />
                <input class="span8" type="text" id="phonenumber" maxlength="17" placeholder="Phone Number (Optional)" data-bind="{value:User().PhoneNumber,enable:User().ValidZip}" /><br />
                <button id="beInvolved" data-bind="{click:ContinueWorkflowClick}" class="btn btn-large btn-primary"><i class="icon-envelope"></i> Send &ndash; Get Involved</button>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_PurchaseLetter")
@Html.Partial("_CreateAccount")

@section scripts{

    @if (User.Identity.IsAuthenticated) {
        <script type="text/javascript" src="https://js.stripe.com/v1/"></script>
        <script type="text/javascript" src="/scripts/StripeHelper.js"></script>
        <script type="text/javascript"> Stripe.setPublishableKey('@ConfigurationManager.AppSettings["StripePublishableKey"]'); </script>
        <script type="text/javascript" src="/scripts/IssueLetterAuthenticated.js"></script>
    }
    else {
        @*<script type="text/javascript" src="/scripts/IssueLetterNonAuthenticated.js"></script>*@
    }
    <script src="/scripts/Models/User.js"></script>
    <script src="/scripts/ViewModels/LetterViewModel.js"></script>
    <script type="text/javascript">
        $(function() {
            var vm = new LetterViewModel();
            wcglobals.Letter = vm;
            @if (User.Identity.IsAuthenticated) {
                @:vm.User().Authenticated(true);
                @:vm.User().CongressionalDistrict(@Model.CongressionalDistrict);
                @:vm.User().FirstName('@Model.FirstName');
                @:vm.User().LastName('@Model.LastName');
                @:vm.User().AddressOne('@Model.Address1');
                @:vm.User().AddressTwo('@Model.Address2');
                @:vm.User().City('@Model.City');
                @:vm.User().State('@Model.State');
                @:vm.User().Zip('@Model.ZipCode');
                @:vm.User().Email('@Model.Email');
                @:vm.User().PhoneNumber('@Model.PhoneNumber');

            }
            ko.applyBindings(vm, document.getElementById('senderInfo'));
            ko.applyBindings(vm, document.getElementById('letter'));


            $('#addressse').tooltip();
        });

    </script>
}