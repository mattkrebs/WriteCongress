@using WriteCongress.Core
@model WriteCongress.Web.Models.LetterModel
@section head{
    <link href='http://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>
}
@{
    Layout = "~/Views/Shared/_BootstrapLayout.cshtml";
    var Issue = (Issue)ViewBag.Issue;
    ViewBag.Title = String.Format("Letter {0} {1} ({2})", Model.Letter.Against ? "opposing" : "supporting", Issue.Name, Model.Letter.Name);    
}


<div class="container-fluid">
    <div class="row-fluid">
        <div class="span8">
            <h1>@Model.Letter.Name</h1>
            <h2><a href="/Issues/@Issue.Slug">@Issue.Name</a></h2>
            <div>
                <p>
                    @Model.Letter.Description
                </p>
            </div>
            <div class="letter">
                <div class="letter-head">
                <span id="date">@DateTime.Now.ToString("MMMM d, yyyy")</span><br /><br />
                <span id="name">@(!String.IsNullOrWhiteSpace(Model.FullName)? Model.FullName :"[Your Name]")</span><br />
                <span id="address">@(!String.IsNullOrWhiteSpace(Model.FormatAddress) ? Model.FormatAddress :"[Your Address]")</span><br />
                <span id="city-state-zip">@(!String.IsNullOrWhiteSpace(Model.FormatLocation) ? Model.FormatLocation :"[Your City, State Zip]")</span><br />
                <span id="email">@(!String.IsNullOrWhiteSpace(Model.User.Email) ? Model.User.Email : "[Your Email]") </span><br />
                <span id="phone">@(!String.IsNullOrWhiteSpace(Model.User.PhoneNumber) ? Model.User.PhoneNumber : "[Your Phone]") </span><br /> <br />

                The Honorable <span id="addressse">[NAME OF REP OR SENATOR]</span> <br />
                
                [Location] <br />
 <br />
 </div>
                <div class="letter-reason">RE: @Issue.Name</div>
                <br />

                @Html.Raw(Model.Letter.Body)
                Sincerely<br />
                <span class="signature" id="letter-signature">[Fill out form on right]</span>
            </div>
        </div>
        <div class="span4">
            <div class="well letterinfo">
                <h4>Send this letter</h4>
                <hr />
                <h5>Constituent Info 
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <a href="javascript:void(0);" class="login-label login-launcher"><span class="label label-info"><i class="icon-signin"></i>Sign In</span></a>
                    }
                </h5>
                <input class="span4 livepreview ZipCode" type="text" id="zipcode" maxlength="5" placeholder="Zip Code" /><br />
                <input class="span6 livepreview" type="text" id="firstname" maxlength="11" placeholder="First Name" />
                <input class="span6 livepreview" type="text" id="lastname" maxlength="20" placeholder="Last Name" /><br />
                <input class="span12 address" type="text" id="address1" maxlength="60" placeholder="Address 1" /><br />
                <input class="span12 address" type="text" id="address2" maxlength="60" placeholder="Address 2" /><br />
                <input class="span6 address zipautofill-city" type="text" id="city" maxlength="20" placeholder="City" />
                <select name="state" id="state" class="span6 zipautofill-state address" size="1" placeholder="State">
                    <option value="" selected="selected">State</option>
                    <option value="AL">Alabama</option>
                    <option value="AK">Alaska</option>
                    <option value="AZ">Arizona</option>
                    <option value="AR">Arkansas</option>
                    <option value="CA">California</option>
                    <option value="CO">Colorado</option>
                    <option value="CT">Connecticut</option>
                    <option value="DE">Delaware</option>
                    <option value="DC">Dist of Columbia</option>
                    <option value="FL">Florida</option>
                    <option value="GA">Georgia</option>
                    <option value="HI">Hawaii</option>
                    <option value="ID">Idaho</option>
                    <option value="IL">Illinois</option>
                    <option value="IN">Indiana</option>
                    <option value="IA">Iowa</option>
                    <option value="KS">Kansas</option>
                    <option value="KY">Kentucky</option>
                    <option value="LA">Louisiana</option>
                    <option value="ME">Maine</option>
                    <option value="MD">Maryland</option>
                    <option value="MA">Massachusetts</option>
                    <option value="MI">Michigan</option>
                    <option value="MN">Minnesota</option>
                    <option value="MS">Mississippi</option>
                    <option value="MO">Missouri</option>
                    <option value="MT">Montana</option>
                    <option value="NE">Nebraska</option>
                    <option value="NV">Nevada</option>
                    <option value="NH">New Hampshire</option>
                    <option value="NJ">New Jersey</option>
                    <option value="NM">New Mexico</option>
                    <option value="NY">New York</option>
                    <option value="NC">North Carolina</option>
                    <option value="ND">North Dakota</option>
                    <option value="OH">Ohio</option>
                    <option value="OK">Oklahoma</option>
                    <option value="OR">Oregon</option>
                    <option value="PA">Pennsylvania</option>
                    <option value="RI">Rhode Island</option>
                    <option value="SC">South Carolina</option>
                    <option value="SD">South Dakota</option>
                    <option value="TN">Tennessee</option>
                    <option value="TX">Texas</option>
                    <option value="UT">Utah</option>
                    <option value="VT">Vermont</option>
                    <option value="VA">Virginia</option>
                    <option value="WA">Washington</option>
                    <option value="WV">West Virginia</option>
                    <option value="WI">Wisconsin</option>
                    <option value="WY">Wyoming</option>
                </select>
                <input class="span12" type="text" id="email" maxlength="55" placeholder="Email" />
                <input class="span8" type="text" id="phonenumber" maxlength="17" placeholder="Phone Number (Optional)" /><br />
                <button id="beInvolved" disabled="disabled" class="btn btn-large btn-primary"><i class="icon-envelope"></i> Send</button>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_PurchaseLetter")
@Html.Partial("_CreateAccount")

@section scripts{
    @if (User.Identity.IsAuthenticated)
    {
        <script type="text/javascript" src="https://js.stripe.com/v1/"></script>
        <script type="text/javascript" src="/scripts/StripeHelper.js"></script>
        <script type="text/javascript">
            Stripe.setPublishableKey('pk_test_nOvbLL4UrnJeKav4whH3rJO7');
        </script>
        <script type="text/javascript" src="/scripts/IssueLetterAuthenticated.js"></script>
    }
    else
    {<script type="text/javascript" src="/scripts/IssueLetterNonAuthenticated.js"></script>}

    <script type="text/javascript">
        $(function () {
            
            $('.livepreview').on('keyup', updateLetter);
            $('.livepreview').on('change', updateLetter); //handle the pull from the backend

            $('#zipcode').on('change', function () {
                var input = $(this);
                var zip = input.val();
                input.tooltip('destroy');
                geolocator.GetZipCodeInfo(zip).done(function (data) {
                    if (data !== null) {
                        input.tooltip({ title: data.City + ' ' + data.StateAbbreviation });
                        $('.zipautofill-city').val(data.City);
                        $('.zipautofill-state').val(data.StateAbbreviation);

                        congressPersonFinder.Address.City = data.City;
                        congressPersonFinder.Address.State = data.StateAbbreviation;
                        congressPersonFinder.Address.Zip = zip;
                        congressPersonFinder.Address.CongressionalDistrict = data.CongressionalDistrict;
                    }
                    congressPersonFinder.Find();
                });
            });

            $('.address').on('change', function () {
                var address = $('#address1').val();
                var city = $('#city').val();
                var state = $('#state').val();
                var zip = $('#zipcode').val();

                if (address.length > 4 && city.length > 2 && state.length == 2 && zip.length == 5) {
                    if (typeof congressPersonFinder !== "undefined") {
                        congressPersonFinder.Address.Address1 = address;
                        congressPersonFinder.Address.City = city;
                        congressPersonFinder.Address.State = state;
                        congressPersonFinder.Address.Zip = zip;
                    }
                }
            });

            function updateLetter() {
                var firstname = $('#firstname').val();
                var lastname = $('#lastname').val();
                if (firstname.length === 0 && lastname.length === 0) {
                    $('#letter-signature').html('[Fill out form on right]');
                } else {
                    $('#letter-signature').html(firstname + ' ' + lastname);
                }
            }

            ;
        });
    </script>
}